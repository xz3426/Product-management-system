{"ast":null,"code":"import * as React from 'react';\nimport rcWarning, { resetWarned } from \"rc-util/es/warning\";\nexport { resetWarned };\nexport function noop() {}\n// eslint-disable-next-line import/no-mutable-exports\nlet warning = noop;\nif (process.env.NODE_ENV !== 'production') {\n  warning = (valid, component, message) => {\n    rcWarning(valid, `[antd: ${component}] ${message}`);\n    // StrictMode will inject console which will not throw warning in React 17.\n    if (process.env.NODE_ENV === 'test') {\n      resetWarned();\n    }\n  };\n}\nexport const WarningContext = /*#__PURE__*/React.createContext({});\n/**\n * This is a hook but we not named as `useWarning`\n * since this is only used in development.\n * We should always wrap this in `if (process.env.NODE_ENV !== 'production')` condition\n */\nexport const devUseWarning = process.env.NODE_ENV !== 'production' ? component => {\n  const {\n    deprecated\n  } = React.useContext(WarningContext);\n  const typeWarning = (valid, type, message) => {\n    if (deprecated !== false || type !== 'deprecated') {\n      process.env.NODE_ENV !== \"production\" ? warning(valid, component, message) : void 0;\n    }\n  };\n  typeWarning.deprecated = (valid, oldProp, newProp, message) => {\n    typeWarning(valid, 'deprecated', `\\`${oldProp}\\` is deprecated. Please use \\`${newProp}\\` instead.${message ? ` ${message}` : ''}`);\n  };\n  return typeWarning;\n} : () => {\n  const noopWarning = () => {};\n  noopWarning.deprecated = noop;\n  return noopWarning;\n};\nexport default warning;","map":{"version":3,"names":["React","rcWarning","resetWarned","noop","warning","process","env","NODE_ENV","valid","component","message","WarningContext","createContext","devUseWarning","deprecated","useContext","typeWarning","type","oldProp","newProp","noopWarning"],"sources":["E:/chuwa/Product-management-system/node_modules/antd/es/_util/warning.js"],"sourcesContent":["import * as React from 'react';\nimport rcWarning, { resetWarned } from \"rc-util/es/warning\";\nexport { resetWarned };\nexport function noop() {}\n// eslint-disable-next-line import/no-mutable-exports\nlet warning = noop;\nif (process.env.NODE_ENV !== 'production') {\n  warning = (valid, component, message) => {\n    rcWarning(valid, `[antd: ${component}] ${message}`);\n    // StrictMode will inject console which will not throw warning in React 17.\n    if (process.env.NODE_ENV === 'test') {\n      resetWarned();\n    }\n  };\n}\nexport const WarningContext = /*#__PURE__*/React.createContext({});\n/**\n * This is a hook but we not named as `useWarning`\n * since this is only used in development.\n * We should always wrap this in `if (process.env.NODE_ENV !== 'production')` condition\n */\nexport const devUseWarning = process.env.NODE_ENV !== 'production' ? component => {\n  const {\n    deprecated\n  } = React.useContext(WarningContext);\n  const typeWarning = (valid, type, message) => {\n    if (deprecated !== false || type !== 'deprecated') {\n      process.env.NODE_ENV !== \"production\" ? warning(valid, component, message) : void 0;\n    }\n  };\n  typeWarning.deprecated = (valid, oldProp, newProp, message) => {\n    typeWarning(valid, 'deprecated', `\\`${oldProp}\\` is deprecated. Please use \\`${newProp}\\` instead.${message ? ` ${message}` : ''}`);\n  };\n  return typeWarning;\n} : () => {\n  const noopWarning = () => {};\n  noopWarning.deprecated = noop;\n  return noopWarning;\n};\nexport default warning;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,IAAIC,WAAW,QAAQ,oBAAoB;AAC3D,SAASA,WAAW;AACpB,OAAO,SAASC,IAAIA,CAAA,EAAG,CAAC;AACxB;AACA,IAAIC,OAAO,GAAGD,IAAI;AAClB,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,OAAO,GAAGA,CAACI,KAAK,EAAEC,SAAS,EAAEC,OAAO,KAAK;IACvCT,SAAS,CAACO,KAAK,EAAG,UAASC,SAAU,KAAIC,OAAQ,EAAC,CAAC;IACnD;IACA,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;MACnCL,WAAW,CAAC,CAAC;IACf;EACF,CAAC;AACH;AACA,OAAO,MAAMS,cAAc,GAAG,aAAaX,KAAK,CAACY,aAAa,CAAC,CAAC,CAAC,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGE,SAAS,IAAI;EAChF,MAAM;IACJK;EACF,CAAC,GAAGd,KAAK,CAACe,UAAU,CAACJ,cAAc,CAAC;EACpC,MAAMK,WAAW,GAAGA,CAACR,KAAK,EAAES,IAAI,EAAEP,OAAO,KAAK;IAC5C,IAAII,UAAU,KAAK,KAAK,IAAIG,IAAI,KAAK,YAAY,EAAE;MACjDZ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGH,OAAO,CAACI,KAAK,EAAEC,SAAS,EAAEC,OAAO,CAAC,GAAG,KAAK,CAAC;IACrF;EACF,CAAC;EACDM,WAAW,CAACF,UAAU,GAAG,CAACN,KAAK,EAAEU,OAAO,EAAEC,OAAO,EAAET,OAAO,KAAK;IAC7DM,WAAW,CAACR,KAAK,EAAE,YAAY,EAAG,KAAIU,OAAQ,kCAAiCC,OAAQ,cAAaT,OAAO,GAAI,IAAGA,OAAQ,EAAC,GAAG,EAAG,EAAC,CAAC;EACrI,CAAC;EACD,OAAOM,WAAW;AACpB,CAAC,GAAG,MAAM;EACR,MAAMI,WAAW,GAAGA,CAAA,KAAM,CAAC,CAAC;EAC5BA,WAAW,CAACN,UAAU,GAAGX,IAAI;EAC7B,OAAOiB,WAAW;AACpB,CAAC;AACD,eAAehB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}